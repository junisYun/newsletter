{"version":3,"sources":["Components/Header/Header.js","Components/PostWrapper/PostWrapper.js","Components/Navigator/Navigate.js","Components/Post/Post.js","Components/CommentList/CommentList.js","Components/Comment/Comment.js","Components/Warning/Warning.js","services/post.js","Containers/PostContainers.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","PostWrapper","children","Navigate","onClick","postId","disabled","Button","color","content","icon","labelPosition","Post","props","state","postInfo","title","body","comments","animate","direction","nextProps","this","setState","setTimeout","animation","Component","CommentList","commentList","map","comment","index","name","email","split","Comment","Warning","closing","visible","message","getPost","axios","get","getComments","PostContainer","fetchPostInfo","a","fetching","Promise","all","service","info","data","post","console","log","showWarning","handleNavigateClick","type","warningVisibility","visibility","App","PostContainers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kYAUeA,MARf,WACI,OACI,qBAAKC,UAAU,SAAf,oB,MCQOC,MATf,YAAoC,IAAbC,EAAY,EAAZA,SACnB,OACI,qBAAKF,UAAU,cAAf,SACME,K,cC+BCC,MAjCf,YAAkD,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACjC,OACI,sBAAKN,UAAU,WAAf,UACA,cAACO,EAAA,EAAD,CACIC,MAAM,OACNC,QAAQ,WACRC,KAAK,aACLC,cAAc,OACdP,QACI,kBAAMA,EAAQ,SAElBE,SAAaA,IAEjB,qBAAKN,UAAU,oBAAf,SACMK,IAEN,cAACE,EAAA,EAAD,CACIC,MAAM,OACNC,QAAQ,OACRC,KAAK,cACLC,cAAc,QACdX,UAAU,wBACVI,QACI,kBAAMA,EAAQ,SAElBE,SAAaA,QCkDVM,G,wDAzEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,CACNC,MAAO,KACPC,KAAM,KACNC,SAAU,IAEdC,SAAS,EACTC,UAAW,QATA,E,6DAcnB,SAA2BC,GAAY,IAAD,OAE1BL,EAA0BK,EAA1BL,MAAOC,EAAmBI,EAAnBJ,KAAMC,EAAaG,EAAbH,SAErB,GAAGI,KAAKT,MAAMR,SAAWgB,EAAUhB,OAAQ,CAEvC,IAAMe,EAAYE,KAAKT,MAAMR,OAASgB,EAAUhB,OAAS,OAAS,QAkBlE,OAhBAiB,KAAKC,SAAS,CACVH,YACAD,SAAS,SAIbK,YACI,WACI,EAAKD,SAAS,CACVR,SAAU,CACNC,QAAOC,OAAMC,YAEjBC,SAAS,MAEd,KAMXG,KAAKC,SAAS,CACVR,SAAU,CACNC,QAAOC,OAAMC,gB,oBAKzB,WACI,MAAkCI,KAAKR,MAAMC,SAArCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,SAErB,EAA+BI,KAAKR,MAA5BK,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UAEXK,EAAYN,EACe,SAAZC,EAAqB,gBAAkB,iBAC3B,SAAZA,EAAqB,gBAAkB,eAG5D,OAAW,OAARJ,EAAqB,KAGpB,sBAAKhB,UAAS,wBAAmByB,GAAjC,UACI,6BAAKT,IACL,4BACKC,IAEL,cAAC,EAAD,CAAaC,SAAUA,W,GApEpBQ,c,MCmBJC,MApBf,YAAoC,IAE1BC,EAFyB,EAAZV,SAEUW,KACzB,SAACC,EAASC,GAAV,OACI,cAAC,EAAD,CACIC,KAAMF,EAAQG,MAAMC,MAAM,KAAK,GAC/BjB,KAAMa,EAAQb,MACTc,MAKjB,OACI,oBAAI/B,UAAU,cAAd,SACM4B,K,MCHCO,MAZf,YAAkC,IAAfH,EAAc,EAAdA,KAAMf,EAAQ,EAARA,KAErB,OACI,oBAAIjB,UAAU,UAAd,SACI,8BACI,4BAAKgC,IADT,IACsBf,QCgCnBmB,G,wDApCX,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEuB,SAAS,GAFT,E,6DAInB,SAA2BhB,GAAY,IAAD,OAC/BC,KAAKT,MAAMyB,UAAYjB,EAAUiB,UAGjChB,KAAKC,SAAS,CACVc,SAAS,IAIbb,YACI,WACI,EAAKD,SAAS,CACVc,SAAS,MAEd,Q,oBAId,WACI,MAA6Bf,KAAKT,MAA1B0B,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,QACTD,EAAYf,KAAKR,MAAjBuB,QACR,OAAIC,GAAYD,EAEZ,qBAAKrC,UAAU,kBAAf,SACI,qBAAKA,UAAS,kBAAaqC,EAAQ,YAAY,WAAjC,aAAd,SACKE,MAJmB,S,GA1BlBb,c,0CCDf,SAASc,EAAQnC,GACpB,OAAOoC,IAAMC,IAAI,8CAAgDrC,GAG9D,SAASsC,EAAYtC,GACxB,OAAOoC,IAAMC,IAAN,qDAAwDrC,EAAxD,c,IC8FIuC,E,kDA/FX,WAAY/B,GAAQ,IAAD,8BACf,gBAgBJgC,cAjBmB,uCAiBH,WAAOxC,GAAP,uBAAAyC,EAAA,6DACZ,EAAKvB,SAAS,CACVwB,UAAU,IAFF,kBAKWC,QAAQC,IAAI,CAC3BC,EAAgB7C,GAChB6C,EAAoB7C,KAPhB,OAKF8C,EALE,SAYgBA,EAAK,GAAGC,KAAxBpC,EAZA,EAYAA,MAAOC,EAZP,EAYOA,KAETC,EAAWiC,EAAK,GAAGC,KAEzB,EAAK7B,SAAS,CACVlB,SACAgD,KAAM,CACFrC,QACAC,QAEJC,WACA6B,UAAU,IAvBN,kDA0BR,EAAKxB,SAAS,CACVwB,UAAU,IAEdO,QAAQC,IAAI,iBAAZ,MACA,EAAKC,cA9BG,0DAjBG,wDAoDnBC,oBAAsB,SAACC,GACnB,IAAMrD,EAAS,EAAKS,MAAMT,OAEb,SAATqD,EACA,EAAKb,cAAcxC,EAAS,GAE5B,EAAKwC,cAAcxC,EAAS,IA1DjB,EA6DnBmD,YAAc,WACV,EAAKjC,SAAS,CACVoC,mBAAmB,IAGvBnC,YACI,WACI,EAAKD,SAAS,CACVoC,mBAAmB,MAExB,OApEP,EAAK7C,MAAQ,CACTT,OAAQ,EACR0C,UAAU,EACVM,KAAM,CACFrC,MAAO,KACPC,KAAM,MAEVC,SAAU,GACVyC,mBAAmB,GAXR,E,qDAcnB,WACIrC,KAAKuB,cAAc,K,oBA2DvB,WACI,MAAgEvB,KAAKR,MAA7DT,EAAR,EAAQA,OAAQ0C,EAAhB,EAAgBA,SAAUM,EAA1B,EAA0BA,KAAMnC,EAAhC,EAAgCA,SAAUyC,EAA1C,EAA0CA,kBAC1C,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CACItD,OAAQA,EACRC,SAAUyC,EACV3C,QAASkB,KAAKmC,sBAElB,cAAC,EAAD,CACIpD,OAAQA,EACRW,MAAOqC,EAAKrC,MACZC,KAAMoC,EAAKpC,KACXC,SAAUA,IAEd,cAAC,EAAD,CAASqB,QAAQ,2BAA2BqB,WAAYD,W,GA1F5CjC,aCWbmC,E,4JAVX,WACI,OACI,gCACE,cAAC,EAAD,IACA,cAACC,EAAD,W,GALIpC,aCOHqC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,MCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39292d88.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport './Header.scss'\r\nfunction Header() {\r\n    return (\r\n        <div className=\"Header\">\r\n            POSTS\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","/* eslint-disable */\r\nimport './PostWrapper.css'\r\n\r\nfunction PostWrapper({ children }) {\r\n    return(\r\n        <div className=\"PostWrapper\">\r\n            { children }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PostWrapper;","/* eslint-disable */\r\nimport { Button } from 'semantic-ui-react'\r\nimport './Navigate.css'\r\n\r\nfunction Navigate({ onClick, postId, disabled }) {\r\n    return(\r\n        <div className=\"Navigate\">\r\n        <Button\r\n            color=\"teal\"\r\n            content=\"Previous\"\r\n            icon=\"left arrow\"\r\n            labelPosition=\"left\"\r\n            onClick = {\r\n                () => onClick('PREV')\r\n            }\r\n            disabled = { disabled }\r\n        />\r\n        <div className=\"Navigate-page-num\">\r\n            { postId }\r\n        </div>\r\n        <Button\r\n            color=\"teal\"\r\n            content=\"Next\"\r\n            icon=\"right arrow\"\r\n            labelPosition=\"right\"\r\n            className=\"Navigate-right-button\"\r\n            onClick = {\r\n                () => onClick('NEXT')\r\n            }\r\n            disabled = { disabled }\r\n        /> \r\n    </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Navigate;","/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport './Post.css';\r\nimport { CommentList } from '../';\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postInfo: {\r\n                title: null,\r\n                body: null,\r\n                comments: []\r\n            },\r\n            animate: false,\r\n            direction: 'left'\r\n        }\r\n    }\r\n    \r\n\r\n    componentWillReceiveProps (nextProps) {\r\n        \r\n        const { title, body, comments } = nextProps;\r\n        \r\n        if(this.props.postId !== nextProps.postId) {\r\n            // identify the animation direction\r\n            const direction = this.props.postId < nextProps.postId ? 'left' : 'right';\r\n            \r\n            this.setState({\r\n                direction,\r\n                animate: true\r\n            });\r\n\r\n            // sync the props to state 0.5 sec later\r\n            setTimeout(\r\n                () => {\r\n                    this.setState({\r\n                        postInfo: {\r\n                            title, body, comments \r\n                        },\r\n                        animate: false\r\n                    })\r\n                }, 500\r\n            );\r\n            return;\r\n        }\r\n\r\n        // sync the props to state directly (this is the first post)\r\n        this.setState({\r\n            postInfo: {\r\n                title, body, comments \r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const { title, body, comments } = this.state.postInfo;\r\n\r\n        const { animate, direction } = this.state;\r\n        \r\n        const animation = animate \r\n                          ? (direction==='left' ? 'bounceOutLeft' : 'bounceOutRight')\r\n                          : (direction==='left' ? 'bounceInRight' : 'bounceInLeft');\r\n\r\n        // show nothing when data is not loaded\r\n        if(title===null) return null;\r\n\r\n        return (\r\n            <div className={`Post animated ${animation}`}>\r\n                <h1>{title}</h1>\r\n                <p>\r\n                    {body}\r\n                </p>\r\n                <CommentList comments={comments}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","/* eslint-disable */\r\n\r\nimport './CommentList.css'\r\nimport { Comment } from '../'\r\nfunction CommentList({ comments }) {\r\n\r\n    const commentList = comments.map(\r\n        (comment, index) => (\r\n            <Comment\r\n                name={comment.email.split('@')[0]}\r\n                body={comment.body}\r\n                key={index}\r\n            />\r\n        )\r\n    );\r\n\r\n    return (\r\n        <ul className=\"CommentList\">\r\n            { commentList }\r\n        </ul>\r\n\r\n    );\r\n}\r\n\r\nexport default CommentList;","/* eslint-disable */\r\nimport './Comment.css'\r\n\r\nfunction Comment({ name, body }) {\r\n\r\n    return(\r\n        <li className=\"Comment\">\r\n            <p>\r\n                <b>{ name }</b> { body }\r\n            </p>\r\n        </li>\r\n\r\n    );\r\n}\r\n\r\nexport default Comment;","import React, {Component} from 'react';\r\nimport \"./Warning.css\";\r\n\r\nclass Warning extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { closing: false };\r\n    }\r\n    componentWillReceiveProps (nextProps) {\r\n        if(this.props.visible && !nextProps.visible) {\r\n        // visible props is changing from true -> false\r\n           \r\n           this.setState({\r\n               closing: true\r\n           });\r\n\r\n           // 1 sec after\r\n           setTimeout(\r\n               () => {\r\n                   this.setState({\r\n                       closing: false\r\n                   });\r\n               }, 1000\r\n           );\r\n        }\r\n    }\r\n    render() {\r\n        const { message, visible } = this.props;\r\n        const { closing } = this.state;\r\n        if(!visible && !closing) return null;\r\n        return (\r\n            <div className=\"Warning-wrapper\">\r\n                <div className={`Warning ${closing?'bounceOut':'bounceIn'} animated`}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Warning;","import axios from 'axios'\r\n\r\nexport function getPost(postId) {\r\n    return axios.get('https://jsonplaceholder.typicode.com/posts/' + postId)\r\n}\r\n\r\nexport function getComments(postId) {\r\n    return axios.get(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`)\r\n}","import React, { Component } from 'react';\r\nimport { PostWrapper, Navigate, Post, Warning } from '../Components';\r\nimport * as service from '../services/post';\r\n\r\n\r\nclass PostContainer extends Component {\r\n    constructor(props) {\r\n        super();\r\n        // initializes component state\r\n        this.state = {\r\n            postId: 1,\r\n            fetching: false,\r\n            post: {\r\n                title: null,\r\n                body: null\r\n            },\r\n            comments: [],\r\n            warningVisibility: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.fetchPostInfo(1);\r\n    }\r\n    fetchPostInfo = async (postId) => {\r\n        this.setState({\r\n            fetching: true // requesting..\r\n        });\r\n        try {\r\n            const info = await Promise.all([\r\n                service.getPost(postId),\r\n                service.getComments(postId)\r\n            ]);\r\n\r\n            // Object destructuring Syntax,\r\n            // takes out required values and create references to them\r\n            const { title, body } = info[0].data;\r\n\r\n            const comments = info[1].data;\r\n\r\n            this.setState({\r\n                postId,\r\n                post: {\r\n                    title,\r\n                    body\r\n                },\r\n                comments,\r\n                fetching: false // done!\r\n            });\r\n        } catch (e) {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n            console.log('error occurred', e);\r\n            this.showWarning();\r\n        }\r\n\r\n    }\r\n\r\n    handleNavigateClick = (type) => {\r\n        const postId = this.state.postId;\r\n\r\n        if (type === 'NEXT') {\r\n            this.fetchPostInfo(postId + 1);\r\n        } else {\r\n            this.fetchPostInfo(postId - 1);\r\n        }\r\n    }\r\n    showWarning = () => {\r\n        this.setState({\r\n            warningVisibility: true\r\n        });\r\n\r\n        setTimeout(\r\n            () => {\r\n                this.setState({\r\n                    warningVisibility: false\r\n                });\r\n            }, 1500\r\n        );\r\n    }\r\n    render() {\r\n        const { postId, fetching, post, comments, warningVisibility } = this.state;\r\n        return (\r\n            <PostWrapper>\r\n                <Navigate\r\n                    postId={postId}\r\n                    disabled={fetching}\r\n                    onClick={this.handleNavigateClick}\r\n                />\r\n                <Post\r\n                    postId={postId}\r\n                    title={post.title}\r\n                    body={post.body}\r\n                    comments={comments}\r\n                />\r\n                <Warning message=\"That post does not exist\" visibility={warningVisibility} />\r\n            </PostWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostContainer;","/* eslint-disable*/\nimport React, { Component } from 'react';\nimport { Header } from './Components'\nimport { PostContainers } from './Containers'\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n              <Header></Header>\n              <PostContainers></PostContainers>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport './Animation.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}